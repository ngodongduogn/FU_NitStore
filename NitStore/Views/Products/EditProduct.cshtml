@model NitStore.Models.DTO.ProductEditDTO
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = "_LayoutMaketer";
}





@using (Html.BeginForm("EditProduct", "Products", FormMethod.Post,
                new { enctype = "multipart/form-data" }))
{

    <div class="d-flex container-fluid justify-content-center">
        <div class="w-75 mt-5">
            <h1>Edit Product Info</h1>
            <div>
                @if (ViewBag.Message != null)
                {
                    <a>@ViewBag.Message !</a>
                }
            </div>
            @Html.HiddenFor(model => model.Id)
            <div class="input-group mb-3">
                <span class="input-group-text" id="inputGroup-sizing-default">Product Name</span>
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
            <div class="input-group mb-3">
                <span class="input-group-text" id="inputGroup-sizing-default">Description</span>
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
            <div class="input-group mb-3">
                <span class="input-group-text" id="inputGroup-sizing-default">Status</span>
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
            <div class="input-group mb-3">
                <span class="input-group-text" id="inputGroup-sizing-default">Quantity</span>
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
            <div class="input-group mb-3">
                <div class="form-group">
                    <label class="col-form-label">Select 1/n Picture</label>
                    <input asp-for="Imagess" class="form-control" multiple />
                    <span asp-validation-for="Imagess" class="text-danger"></span>
                </div>
            </div>
            @*@foreach (byte[] item in ViewBag.Product.imageBit)
        {

        }*@
            @for (int i = 0; i < ViewBag.Product.imageBit.Count; i++)
            {
                <img src="data:image;base64,@System.Convert.ToBase64String(ViewBag.Product.imageBit[i])"
             class="card-img-top"
             alt="Product Image" />
                <button onclick="window.location.href='@Url.Action("DeleteProductImage", "Images", new { id = @ViewBag.Product.imageIds[i], productId = @ViewBag.Product.Id})'" type="button" class="btn btn-danger btn-block btn-lg">
                    Delete Image
                </button>
            }
            <div class="input-group mb-3">
                <span class="input-group-text" id="inputGroup-sizing-default">Category</span>
                @Html.DropDownListFor(model => model.CategoryId, Model.CategoryList,
            new
            {
            @class = "form-control selectpicker",
            data_live_search = "true"
            })
            </div>
            <div class="input-group mb-3">
                <span class="input-group-text" id="inputGroup-sizing-default">Price</span>
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>

            <div class="form-group btn-create">
                <div>
                    <input type="submit" value="Save Product" class=" btn btn-warning btn-normal" />
                </div>
            </div>
        </div>
    </div>
}


